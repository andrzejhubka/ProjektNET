@model ProjektZaliczeniowyNET.DTOs.ServiceOrder.ServiceOrderCreateDto

@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        Formularz zawiera błędy:
        <ul>
            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
            {
                <li>@error.ErrorMessage</li>
            }
        </ul>
    </div>
}

@{
ViewData["Title"] = "Nowe zlecenie serwisowe";
}


<h2>@ViewData["Title"]</h2>

@using (Html.BeginForm())
{
@Html.AntiForgeryToken()

<div class="form-group">
    @Html.LabelFor(m => m.VehicleId, "Pojazd")
    <div class="input-group">
        @Html.DropDownListFor(
            m => m.VehicleId, 
            ViewBag.Vehicles as SelectList, 
            "-- Wybierz pojazd --", 
            new { @class = "form-control" })
        <div class="input-group-append">
            <a href="/Vehicle/Create?returnUrl=/ServiceOrder/Create" class="btn btn-outline-secondary">
                <i class="fas fa-plus"></i> Dodaj pojazd
            </a>
        </div>
    </div>
    @Html.ValidationMessageFor(m => m.VehicleId)
</div>

<div class="form-group">
    @Html.LabelFor(m => m.CustomerId, "Klient")
    <div class="input-group">
        @Html.DropDownListFor(
            m => m.CustomerId,
            ViewBag.Customers as SelectList,
            "-- Wybierz klienta --",
            new { @class = "form-control" })
        <div class="input-group-append">
            <a href="/Customer/Create?returnUrl=/ServiceOrder/Create" class="btn btn-outline-secondary">
                <i class="fas fa-plus"></i> Dodaj klienta
            </a>
        </div>
    </div>
    @Html.ValidationMessageFor(m => m.CustomerId)
</div>

<div class="form-group">
    @Html.LabelFor(m => m.AssignedMechanicId, "Mechanik")
    @Html.DropDownListFor(
    m => m.AssignedMechanicId,
    ViewBag.Mechanics as SelectList,
    "-- Wybierz mechanika --",
    new { @class = "form-control" })
    @Html.ValidationMessageFor(m => m.AssignedMechanicId)
</div>

<div class="form-group">
    <h4>Zadania serwisowe</h4>
    <div id="service-tasks-container">
    </div>
    <button type="button" id="add-task-btn" class="btn btn-success">Dodaj zadanie</button>
</div>

<button type="submit" class="btn btn-primary">Zapisz</button>
<a asp-action="Index" class="btn btn-secondary">Anuluj</a>
}

<script>
    // Przekaż dane części z ViewBag do JavaScript
    var partsData = [];
    @if (ViewBag.Parts != null)
    {
    <text>
    partsData = @Html.Raw(Json.Serialize(ViewBag.Parts));
    </text>
    }

    console.log('Dane części:', partsData); // Debug
</script>

<script>
    let taskIndex = 0;
    let partIndex = 0;

    document.getElementById('add-task-btn').addEventListener('click', function() {
        addServiceTask();
    });

    function addServiceTask() {
        const container = document.getElementById('service-tasks-container');
        const taskHtml = `
        <div class="service-task-item border p-3 mb-3">
            <div class="row">
                <div class="col-md-6">
                    <label>Opis zadania</label>
                    <input type="text" name="ServiceTasks[${taskIndex}].Description" class="form-control" required />
                </div>
                <div class="col-md-4">
                    <label>Koszt robocizny (PLN)</label>
                    <input type="number" step="0.01" name="ServiceTasks[${taskIndex}].LaborCost" class="form-control" min="0" />
                </div>
                <div class="col-md-2">
                    <label>&nbsp;</label>
                    <button type="button" class="btn btn-danger form-control" onclick="removeTask(this)">Usuń zadanie</button>
                </div>
            </div>
            
            <div class="mt-3">
                <h6>Użyte części</h6>
                <div class="parts-container" data-task-index="${taskIndex}">
                </div>
                <button type="button" class="btn btn-sm btn-outline-primary" onclick="addPart(${taskIndex})">Dodaj część</button>
            </div>
        </div>
    `;
        container.insertAdjacentHTML('beforeend', taskHtml);
        taskIndex++;
    }

    function addPart(taskIdx) {
        const partsContainer = document.querySelector(`[data-task-index="${taskIdx}"]`);

        let optionsHtml = '<option value="">-- Wybierz część --</option>';

        if (partsData && partsData.length > 0) {
            partsData.forEach(part => {
                // Sprawdź różne warianty właściwości
                const value = part.Value || part.value || part.Id;
                const text = part.Text || part.text || part.Name;
                optionsHtml += `<option value="${value}">${text}</option>`;
            });
        }

        const partHtml = `
        <div class="part-item row mb-2 p-2 border rounded">
            <div class="col-md-4">
                <label class="form-label">Część</label>
                <select name="ServiceTasks[${taskIdx}].UsedParts[${partIndex}].Id" class="form-control">
                    ${optionsHtml}
                </select>
            </div>
            <div class="col-md-3">
                <label class="form-label">Ilość</label>
                <input type="number" name="ServiceTasks[${taskIdx}].UsedParts[${partIndex}].Quantity" 
                       class="form-control" min="1" value="1" />
            </div>
            <div class="col-md-3">
                <label class="form-label">Cena (PLN)</label>
                <input type="number" step="0.01" name="ServiceTasks[${taskIdx}].UsedParts[${partIndex}].Price" 
                       class="form-control" min="0" />
            </div>
            <div class="col-md-2">
                <label class="form-label">&nbsp;</label>
                <button type="button" class="btn btn-sm btn-danger form-control" onclick="removePart(this)">Usuń</button>
            </div>
        </div>
    `;
        partsContainer.insertAdjacentHTML('beforeend', partHtml);
        partIndex++;
    }

    function removeTask(button) {
        button.closest('.service-task-item').remove();
    }

    function removePart(button) {
        button.closest('.part-item').remove();
    }

    document.addEventListener('DOMContentLoaded', function() {
        addServiceTask();
    });
</script>

