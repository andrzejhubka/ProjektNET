@model ProjektZaliczeniowyNET.DTOs.ServiceOrder.ServiceOrderCreateDto

@{
    ViewData["Title"] = "Nowe zlecenie serwisowe";
}

<h2>@ViewData["Title"]</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-group">
        @Html.LabelFor(m => m.VehicleId, "Pojazd")
        @Html.DropDownListFor(
            m => m.VehicleId, 
            ViewBag.Vehicles as SelectList, 
            "-- Wybierz pojazd --", 
            new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.VehicleId)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.CustomerId, "Klient")
        @Html.DropDownListFor(
            m => m.CustomerId, 
            ViewBag.Customers as SelectList, 
            "-- Wybierz klienta --", 
            new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.CustomerId)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.AssignedMechanicId, "Mechanik")
        @Html.DropDownListFor(
            m => m.AssignedMechanicId, 
            ViewBag.Mechanics as SelectList, 
            "-- Wybierz mechanika --", 
            new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.AssignedMechanicId)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.AssignedMechanicId, "Dodaj zadania")
        @Html.DropDownListFor(
            m => m.AssignedMechanicId, 
            ViewBag.Mechanics as SelectList, 
            "-- Wybierz mechanika --", 
            new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.AssignedMechanicId)
    </div>
    
    <div class="form-group">
        <h4>Zadania serwisowe</h4>
        <div id="service-tasks-container">
        </div>
        <button type="button" id="add-task-btn" class="btn btn-success">Dodaj zadanie</button>
    </div>
   
    <button type="submit" class="btn btn-primary">Zapisz</button>
    <a asp-action="Index" class="btn btn-secondary">Anuluj</a>
}

<script>
let taskIndex = 0;
let partIndex = 0;

document.getElementById('add-task-btn').addEventListener('click', function() {
    addServiceTask();
});

function addServiceTask() {
    const container = document.getElementById('service-tasks-container');
    const taskHtml = `
        <div class="service-task-item border p-3 mb-3">
            <div class="row">
                <div class="col-md-6">
                    <label>Opis zadania</label>
                    <input type="text" name="ServiceTasks[${taskIndex}].Description" class="form-control" required />
                </div>
                <div class="col-md-4">
                    <label>Koszt robocizny (PLN)</label>
                    <input type="number" step="0.01" name="ServiceTasks[${taskIndex}].LaborCost" class="form-control" min="0" />
                </div>
                <div class="col-md-2">
                    <label>&nbsp;</label>
                    <button type="button" class="btn btn-danger form-control" onclick="removeTask(this)">Usuń zadanie</button>
                </div>
            </div>
            
            <!-- Sekcja części -->
            <div class="mt-3">
                <h6>Użyte części</h6>
                <div class="parts-container" data-task-index="${taskIndex}">
                    <!-- Tutaj będą dodawane części -->
                </div>
                <button type="button" class="btn btn-sm btn-outline-primary" onclick="addPart(${taskIndex})">Dodaj część</button>
            </div>
        </div>
    `;
    container.insertAdjacentHTML('beforeend', taskHtml);
    taskIndex++;
}

function addPart(taskIdx) {
    const partsContainer = document.querySelector(`[data-task-index="${taskIdx}"]`);
    const partHtml = `
        <div class="part-item row mb-2 p-2 border-left">
            <div class="col-md-4">
                <select name="ServiceTasks[${taskIdx}].UsedParts[${partIndex}].Id" class="form-control">
                    <option value="">-- Wybierz część --</option>
                    @foreach(var part in ViewBag.Parts as List<SelectListItem> ?? new List<SelectListItem>())
                    {
                        <option value="${part.Value}">${part.Text}</option>
                    }
                </select>
            </div>
            <div class="col-md-3">
                <input type="number" name="ServiceTasks[${taskIdx}].UsedParts[${partIndex}].Quantity" 
                       placeholder="Ilość" class="form-control" min="1" value="1" />
            </div>
            <div class="col-md-3">
                <input type="number" step="0.01" name="ServiceTasks[${taskIdx}].UsedParts[${partIndex}].Price" 
                       placeholder="Cena" class="form-control" min="0" readonly />
            </div>
            <div class="col-md-2">
                <button type="button" class="btn btn-sm btn-danger" onclick="removePart(this)">Usuń</button>
            </div>
        </div>
    `;
    partsContainer.insertAdjacentHTML('beforeend', partHtml);
    partIndex++;
}

function removeTask(button) {
    button.closest('.service-task-item').remove();
}

function removePart(button) {
    button.closest('.part-item').remove();
}

document.addEventListener('DOMContentLoaded', function() {
    addServiceTask();
});
</script>