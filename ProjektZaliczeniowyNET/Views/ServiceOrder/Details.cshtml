@model ProjektZaliczeniowyNET.DTOs.ServiceOrder.ServiceOrderDto

@{
    ViewData["Title"] = $"Szczegóły zlecenia #{Model.Id}";
}

<h2 class="mb-4">@ViewData["Title"]</h2>

<div class="row g-4">
    <!-- Samochód -->
    <div class="col-12">
        <div class="card shadow-sm">
            <div class="card-header bg-secondary text-white">
                <i class="bi bi-car-front-fill me-2"></i> Szczegóły samochodu
            </div>
            <div class="card-body">
                <div class="row g-3">
                    <div class="col-md-6">
                        <p><strong>Nazwa:</strong> @Model.Vehicle.DisplayName</p>
                        <p><strong>Numer rejestracyjny:</strong> @Model.Vehicle.LicensePlate</p>
                        <p><strong>Marka i model:</strong> @Model.Vehicle.Make @Model.Vehicle.Model</p>
                        <p><strong>Rok:</strong> @Model.Vehicle.Year</p>
                        <p><strong>Przebieg:</strong> @Model.Vehicle.Mileage km</p>
                    </div>
                    @if (!string.IsNullOrEmpty(Model.Vehicle.ImageUrl))
                    {
                        <div class="col-md-6 text-center align-self-center">
                            <img src="@Model.Vehicle.ImageUrl" alt="Zdjęcie pojazdu" class="img-thumbnail border rounded shadow-sm" style="max-height: 180px;" />
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Klient -->
    <div class="col-md-6">
        <div class="card shadow-sm h-100">
            <div class="card-header bg-info text-white">
                <i class="bi bi-person-fill me-2"></i> Klient
            </div>
            <div class="card-body">
                <p><strong>Imię i nazwisko:</strong> @Model.Customer.FullName</p>
                <p><strong>Email:</strong> @Model.Customer.Email</p>
                <p><strong>Telefon:</strong> @Model.Customer.PhoneNumber</p>
                <p><strong>Miasto:</strong> @Model.Customer.City</p>
                @if (!string.IsNullOrWhiteSpace(Model.Customer.Address))
                {
                    <p><strong>Adres:</strong> @Model.Customer.Address</p>
                }
                @if (!string.IsNullOrWhiteSpace(Model.Customer.Notes))
                {
                    <p><strong>Notatki:</strong> @Model.Customer.Notes</p>
                }
            </div>
        </div>
    </div>

    <!-- Mechanik -->
    <div class="col-md-6">
        <div class="card shadow-sm h-100">
            <div class="card-header bg-success text-white">
                <i class="bi bi-wrench-adjustable-circle-fill me-2"></i> Mechanik
            </div>
            <div class="card-body">
                <p><strong>Imię i nazwisko:</strong> @Model.Mechanic.FullName</p>
                <p><strong>Email:</strong> @Model.Mechanic.Email</p>
            </div>
        </div>
    </div>
    
    <!-- Zadania serwisowe -->
    <div class="form-group">
        <h4>Zadania serwisowe</h4>
        <div id="service-tasks-container">
        </div>
    </div>
</div>

<script>
    // Przekazanie danych części z cenami do JS
    var partsData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.PartsData));
    var existingTasks = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.ServiceTasks));
</script>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const container = document.getElementById('service-tasks-container');
        container.innerHTML = ''; // Wyczyść, jeśli coś tam jest

        if (existingTasks && existingTasks.length > 0) {
            existingTasks.forEach((task, taskIndex) => {
                // Budujemy HTML tylko do wyświetlania
                let taskHtml = `
                <div class="service-task-item border p-3 mb-3">
                    <div class="row">
                        <div class="col-md-6">
                            <label>Opis zadania</label>
                            <input type="text" class="form-control" value="${task.Description || ''}" disabled />
                        </div>
                        <div class="col-md-4">
                            <label>Koszt robocizny (PLN)</label>
                            <input type="number" class="form-control" value="${task.LaborCost || 0}" disabled />
                        </div>
                        <div class="col-md-2">
                            <!-- Usunięto przycisk usuwania -->
                        </div>
                    </div>
                    <div class="mt-3">
                        <h6>Użyte części</h6>
                        <div class="parts-container">
                `;

                // części
                if (task.UsedParts && task.UsedParts.length > 0) {
                    task.UsedParts.forEach(part => {
                        const partData = partsData.find(p => p.Id === part.Id) || {};
                        taskHtml += `
                        <div class="part-item row mb-2 p-2 border rounded">
                            <div class="col-md-4">
                                <label class="form-label">Część</label>
                                <input type="text" class="form-control" value="${partData.Name || 'Nieznana część'}" readonly />
                            </div>
                            <div class="col-md-3">
                                <label class="form-label">Ilość</label>
                                <input type="number" class="form-control" value="${part.Quantity || 1}" readonly />
                            </div>
                            <div class="col-md-3">
                                <label class="form-label">Cena (PLN)</label>
                                <input type="number" class="form-control" value="${part.Price || 0}" readonly />
                            </div>
                            <div class="col-md-2">
                                <!-- Usunięto przycisk usuwania -->
                            </div>
                        </div>`;
                    });
                } else {
                    taskHtml += `<p>Brak użytych części</p>`;
                }

                taskHtml += `
                        </div>
                    </div>
                </div>
                `;

                container.insertAdjacentHTML('beforeend', taskHtml);
            });
        } else {
            container.innerHTML = '<p>Brak zadań do wyświetlenia.</p>';
        }
    });
</script>