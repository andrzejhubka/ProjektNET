@model IEnumerable<ProjektZaliczeniowyNET.DTOs.ServiceOrder.ServiceOrderListDto>
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery

@{
ViewData["Title"] = "Lista zleceń serwisowych";
}

<h1 class="mb-4">@ViewData["Title"]</h1>

<table class="table table-hover table-bordered align-middle shadow-sm">
    <thead class="table-light">
    <tr>
        <th>Numer</th>
        <th>Klient</th>
        <th>Pojazd</th>
        <th>Mechanik</th>
        <th>Status</th>
        <th>Utworzono</th>
        <th class="text-center">Akcje</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var order in Model)
    {
    <tr data-order-id="@order.Id">
        <td class="fw-bold">#@order.Id</td>
        <td>@order.CustomerFullName</td>
        <td>@order.VehicleDisplayName</td>
        <td>@order.Mechanic.Email</td>
        <td>
            <select class="form-select form-select-sm status-select" data-order-id="@order.Id">
                @foreach (var status in Enum.GetValues(typeof(ProjektZaliczeniowyNET.Models.ServiceOrderStatus)).Cast<ProjektZaliczeniowyNET.Models.ServiceOrderStatus>())
                {
                <option value="@((int)status)" selected="@(status == order.Status)">
                    @status
                </option>
                }
            </select>
        </td>
        <td>@order.CreatedAt.ToString("yyyy-MM-dd")</td>
        <td class="text-center">
            <div class="btn-group btn-group-sm" role="group">
                <a asp-controller="ServiceOrder" asp-action="Details" asp-route-id="@order.Id" class="btn btn-outline-primary">
                    <i class="bi bi-eye"></i> Szczegóły
                </a>
                <a asp-controller="ServiceOrder" asp-action="Edit" asp-route-id="@order.Id" class="btn btn-outline-success">
                    <i class="bi bi-pencil"></i> Edytuj
                </a>
                <a asp-controller="ServiceOrder" asp-action="Delete" asp-route-id="@order.Id" class="btn btn-outline-success">
                    <i class="bi bi-pencil"></i> Usun
                </a>
            </div>
        </td>
    </tr>
    }
    </tbody>
</table>

<!-- CSRF Token -->
@Html.AntiForgeryToken()

@section Scripts {
<script>
    document.querySelectorAll('.status-select').forEach(select => {
        select.addEventListener('change', async function () {
            const orderId = this.dataset.orderId;
            const newStatus = parseInt(this.value);
            const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

            try {
                const response = await fetch(`/ServiceOrder/UpdateStatus/${orderId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': token
                    },
                    body: JSON.stringify({ status: newStatus })
                });

                if (response.ok) {
                    alert('Status został zaktualizowany.');
                } else {
                    const errorText = await response.text();
                    console.error('Błąd:', errorText);
                    alert(`Błąd przy aktualizacji statusu: ${response.status}`);
                }
            } catch (e) {
                console.error('Błąd sieci:', e);
                alert('Wystąpił błąd sieci.');
            }
        });
    });
</script>
}
